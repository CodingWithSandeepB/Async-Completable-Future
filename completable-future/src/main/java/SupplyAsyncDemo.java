import dto.Employees;import java.util.List;import java.util.concurrent.CompletableFuture;import java.util.concurrent.ExecutionException;import java.util.concurrent.Executor;import java.util.concurrent.Executors;public class SupplyAsyncDemo {    public List<Employees> getEmployees(){        Executor executor = Executors.newCachedThreadPool();        CompletableFuture<List<Employees>> listCompletableFuture =                CompletableFuture.supplyAsync(() -> {                    System.out.println("Supply Async Thread Executed by : " + Thread.currentThread().getName());                   return EmployeeDAO.fetchEmployees();                }, executor);        try {            return listCompletableFuture.get();        } catch (InterruptedException e) {            throw new RuntimeException(e);        } catch (ExecutionException e) {            throw new RuntimeException(e);        }    }}