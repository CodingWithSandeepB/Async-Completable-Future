import java.io.File;import java.util.concurrent.ExecutionException;public class Application {    public static void main(String[] args) throws ExecutionException, InterruptedException {//        RunAsyncDemo runAsyncDemo1 = new RunAsyncDemo();//        try {//            File file = new File(System.getProperty("user.home"), "Downloads");//           Void employees = runAsyncDemo1.saveEmployees(new File(file, "employees.json"));//        } catch (ExecutionException e) {//            throw new RuntimeException(e);//        } catch (InterruptedException e) {//            throw new RuntimeException(e);//        }////        RunAsyncDemo runAsyncDemo2 = new RunAsyncDemo();//        try {//            File file = new File(System.getProperty("user.home"), "Downloads");//            Void employees = runAsyncDemo2.saveEmployeesUsingLambda(new File(file, "employees.json"));//        } catch (ExecutionException e) {//            throw new RuntimeException(e);//        } catch (InterruptedException e) {//            throw new RuntimeException(e);//        }////        SupplyAsyncDemo supplyAsyncDemo = new SupplyAsyncDemo();////        System.out.println("============= supply async starts! ================");////        supplyAsyncDemo.getEmployees().stream().forEach(System.out::println);////        System.out.println("============= supply async ends! ================");        EmployeeService service = new EmployeeService();        System.out.println("============= supply async part 2 starts! ================");        service.getAllEmployeesPart2();    }}